(function(){var e,t,n,o,d,r,i,s,l={266:function(){},388:function(){},578:function(e,t,n){Shopware.Component.register("sw-cms-preview-gallery-buybox-bundles",()=>n.e(149).then(n.bind(n,149))),Shopware.Component.register("sw-cms-block-gallery-buybox-bundles",()=>n.e(615).then(n.bind(n,615))),Shopware.Service("cmsService").registerCmsBlock({name:"gallery-buybox-bundles",label:"Gallery Buybox bundles",category:"commerce",component:"sw-cms-block-gallery-buybox-bundles",previewComponent:"sw-cms-preview-gallery-buybox-bundles",defaultConfig:{marginBottom:"20px",marginTop:"20px",marginLeft:"20px",marginRight:"20px",sizingMode:"boxed"},slots:{left:"image-gallery",right:"buy-box-bundles"}})},276:function(e,t,n){Shopware.Component.register("sw-cms-preview-gallery-buybox-grouped-product",()=>n.e(134).then(n.bind(n,134))),Shopware.Component.register("sw-cms-block-gallery-buybox-grouped-product",()=>n.e(957).then(n.bind(n,957))),Shopware.Service("cmsService").registerCmsBlock({name:"gallery-buybox-grouped-product",label:"Gallery Buybox Grouped Product",category:"commerce",component:"sw-cms-block-gallery-buybox-grouped-product",previewComponent:"sw-cms-preview-gallery-buybox-grouped-product",defaultConfig:{marginBottom:"20px",marginTop:"20px",marginLeft:"20px",marginRight:"20px",sizingMode:"boxed"},slots:{left:"image-gallery",right:"buy-box-grouped-product"}})},33:function(e,t,n){Shopware.Component.register("sw-cms-el-preview-buy-box-bundles",()=>n.e(123).then(n.bind(n,123))),Shopware.Component.register("sw-cms-el-config-buy-box-bundles",()=>n.e(712).then(n.bind(n,712))),Shopware.Component.register("sw-cms-el-buy-box-bundles",()=>n.e(719).then(n.bind(n,719))),Shopware.Service("cmsService").registerCmsElement({name:"buy-box-bundles",label:"Buy Box Bundles",component:"sw-cms-el-buy-box-bundles",configComponent:"sw-cms-el-config-buy-box-bundles",previewComponent:"sw-cms-el-preview-buy-box-bundles",defaultConfig:{content:{source:"static",value:`
                <div class="bundle-select-preview">
                    <p class="title">Bundle Product</p>
                    <div class="bundle-select">
                        <div class="select"></div>
                        <div class="select"></div>
                        <div class="select"></div>
                        <div class="select"></div>
                    </div>
                    <div class="price"> 20€</div>
                    <div class="buy-button">
                        <div class="quantity">+ 1 -</div>
                        <div class="button"> Add to cart</div>
                    </div>
            
                </div>
            `.trim()},verticalAlign:{source:"static",value:null}}})},150:function(e,t,n){Shopware.Component.register("sw-cms-el-preview-buy-box-grouped-product",()=>n.e(827).then(n.bind(n,827))),Shopware.Component.register("sw-cms-el-config-buy-box-grouped-product",()=>n.e(151).then(n.bind(n,151))),Shopware.Component.register("sw-cms-el-buy-box-grouped-product",()=>n.e(984).then(n.bind(n,984))),Shopware.Service("cmsService").registerCmsElement({name:"buy-box-grouped-product",label:"Buy Box Grouped Product",component:"sw-cms-el-buy-box-grouped-product",configComponent:"sw-cms-el-config-buy-box-grouped-product",previewComponent:"sw-cms-el-preview-buy-box-grouped-product",defaultConfig:{content:{source:"static",value:`
                <div class="bundle-select-preview">
                    <p class="title">Bundle Product</p>
                    <div class="bundle-select">
                        <div class="select"></div>
                        <div class="select"></div>
                        <div class="select"></div>
                        <div class="select"></div>
                    </div>
                    <div class="price"> 20€</div>
                    <div class="buy-button">
                        <div class="quantity">+ 1 -</div>
                        <div class="button"> Add to cart</div>
                    </div>
            
                </div>
            `.trim()},verticalAlign:{source:"static",value:null}}})},927:function(e,t,n){var o=n(266);o.__esModule&&(o=o.default),"string"==typeof o&&(o=[[e.id,o,""]]),o.locals&&(e.exports=o.locals),n(346).Z("51c26e4d",o,!0,{})},94:function(e,t,n){var o=n(388);o.__esModule&&(o=o.default),"string"==typeof o&&(o=[[e.id,o,""]]),o.locals&&(e.exports=o.locals),n(346).Z("015f1cb8",o,!0,{})},346:function(e,t,n){"use strict";function o(e,t){for(var n=[],o={},d=0;d<t.length;d++){var r=t[d],i=r[0],s={id:e+":"+d,css:r[1],media:r[2],sourceMap:r[3]};o[i]?o[i].parts.push(s):n.push(o[i]={id:i,parts:[s]})}return n}n.d(t,{Z:function(){return m}});var d="undefined"!=typeof document;if("undefined"!=typeof DEBUG&&DEBUG&&!d)throw Error("vue-style-loader cannot be used in a non-browser environment. Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.");var r={},i=d&&(document.head||document.getElementsByTagName("head")[0]),s=null,l=0,u=!1,a=function(){},c=null,p="data-vue-ssr-id",b="undefined"!=typeof navigator&&/msie [6-9]\b/.test(navigator.userAgent.toLowerCase());function m(e,t,n,d){u=n,c=d||{};var i=o(e,t);return h(i),function(t){for(var n=[],d=0;d<i.length;d++){var s=r[i[d].id];s.refs--,n.push(s)}t?h(i=o(e,t)):i=[];for(var d=0;d<n.length;d++){var s=n[d];if(0===s.refs){for(var l=0;l<s.parts.length;l++)s.parts[l]();delete r[s.id]}}}}function h(e){for(var t=0;t<e.length;t++){var n=e[t],o=r[n.id];if(o){o.refs++;for(var d=0;d<o.parts.length;d++)o.parts[d](n.parts[d]);for(;d<n.parts.length;d++)o.parts.push(g(n.parts[d]));o.parts.length>n.parts.length&&(o.parts.length=n.parts.length)}else{for(var i=[],d=0;d<n.parts.length;d++)i.push(g(n.parts[d]));r[n.id]={id:n.id,refs:1,parts:i}}}}function f(){var e=document.createElement("style");return e.type="text/css",i.appendChild(e),e}function g(e){var t,n,o=document.querySelector("style["+p+'~="'+e.id+'"]');if(o){if(u)return a;o.parentNode.removeChild(o)}if(b){var d=l++;t=w.bind(null,o=s||(s=f()),d,!1),n=w.bind(null,o,d,!0)}else t=v.bind(null,o=f()),n=function(){o.parentNode.removeChild(o)};return t(e),function(o){o?(o.css!==e.css||o.media!==e.media||o.sourceMap!==e.sourceMap)&&t(e=o):n()}}var y=function(){var e=[];return function(t,n){return e[t]=n,e.filter(Boolean).join("\n")}}();function w(e,t,n,o){var d=n?"":o.css;if(e.styleSheet)e.styleSheet.cssText=y(t,d);else{var r=document.createTextNode(d),i=e.childNodes;i[t]&&e.removeChild(i[t]),i.length?e.insertBefore(r,i[t]):e.appendChild(r)}}function v(e,t){var n=t.css,o=t.media,d=t.sourceMap;if(o&&e.setAttribute("media",o),c.ssrId&&e.setAttribute(p,t.id),d&&(n+="\n/*# sourceURL="+d.sources[0]+" */\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(d))))+" */"),e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},u={};function a(e){var t=u[e];if(void 0!==t)return t.exports;var n=u[e]={id:e,exports:{}};return l[e](n,n.exports,a),n.exports}a.m=l,a.d=function(e,t){for(var n in t)a.o(t,n)&&!a.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},a.f={},a.e=function(e){return Promise.all(Object.keys(a.f).reduce(function(t,n){return a.f[n](e,t),t},[]))},a.u=function(e){return"static/js/"+({123:"b81f344f546d57623ff7",134:"f25f646afad77d4c4c10",149:"c13c2756e84598dda3a3",151:"898b97f6be7908bb0992",615:"d72837597f3efae798d4",712:"72157c83740fa2a2cb02",719:"c0a41be4968b55eb0e0b",827:"382207c2559395852374",957:"001d878bf6af4d23a6fd",984:"acc6fcec54f4dfcf38dd"})[e]+".js"},a.miniCssF=function(e){return"static/css/"+(508===e?"bundle-configurator":e)+".css"},a.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},e={},t="administration:",a.l=function(n,o,d,r){if(e[n]){e[n].push(o);return}if(void 0!==d)for(var i,s,l=document.getElementsByTagName("script"),u=0;u<l.length;u++){var c=l[u];if(c.getAttribute("src")==n||c.getAttribute("data-webpack")==t+d){i=c;break}}i||(s=!0,(i=document.createElement("script")).charset="utf-8",i.timeout=120,a.nc&&i.setAttribute("nonce",a.nc),i.setAttribute("data-webpack",t+d),i.src=n),e[n]=[o];var p=function(t,o){i.onerror=i.onload=null,clearTimeout(b);var d=e[n];if(delete e[n],i.parentNode&&i.parentNode.removeChild(i),d&&d.forEach(function(e){return e(o)}),t)return t(o)},b=setTimeout(p.bind(null,void 0,{type:"timeout",target:i}),12e4);i.onerror=p.bind(null,i.onerror),i.onload=p.bind(null,i.onload),s&&document.head.appendChild(i)},a.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},a.p="bundles/bundleconfigurator/",n=function(e,t,n,o){var d=document.createElement("link");return d.rel="stylesheet",d.type="text/css",d.onerror=d.onload=function(r){if(d.onerror=d.onload=null,"load"===r.type)n();else{var i=r&&("load"===r.type?"missing":r.type),s=r&&r.target&&r.target.href||t,l=Error("Loading CSS chunk "+e+" failed.\n("+s+")");l.code="CSS_CHUNK_LOAD_FAILED",l.type=i,l.request=s,d.parentNode.removeChild(d),o(l)}},d.href=t,document.head.appendChild(d),d},o=function(e,t){for(var n=document.getElementsByTagName("link"),o=0;o<n.length;o++){var d=n[o],r=d.getAttribute("data-href")||d.getAttribute("href");if("stylesheet"===d.rel&&(r===e||r===t))return d}for(var i=document.getElementsByTagName("style"),o=0;o<i.length;o++){var d=i[o],r=d.getAttribute("data-href");if(r===e||r===t)return d}},d={508:0},a.f.miniCss=function(e,t){d[e]?t.push(d[e]):0!==d[e]&&({123:1,134:1,149:1,615:1,719:1,827:1,957:1,984:1})[e]&&t.push(d[e]=new Promise(function(t,d){var r=a.miniCssF(e),i=a.p+r;if(o(r,i))return t();n(e,i,t,d)}).then(function(){d[e]=0},function(t){throw delete d[e],t}))},r={508:0},a.f.j=function(e,t){var n=a.o(r,e)?r[e]:void 0;if(0!==n){if(n)t.push(n[2]);else{var o=new Promise(function(t,o){n=r[e]=[t,o]});t.push(n[2]=o);var d=a.p+a.u(e),i=Error();a.l(d,function(t){if(a.o(r,e)&&(0!==(n=r[e])&&(r[e]=void 0),n)){var o=t&&("load"===t.type?"missing":t.type),d=t&&t.target&&t.target.src;i.message="Loading chunk "+e+" failed.\n("+o+": "+d+")",i.name="ChunkLoadError",i.type=o,i.request=d,n[1](i)}},"chunk-"+e,e)}}},i=function(e,t){var n,o,d=t[0],i=t[1],s=t[2],l=0;if(d.some(function(e){return 0!==r[e]})){for(n in i)a.o(i,n)&&(a.m[n]=i[n]);s&&s(a)}for(e&&e(t);l<d.length;l++)o=d[l],a.o(r,o)&&r[o]&&r[o][0](),r[o]=0},(s=window["webpackJsonpPluginbundle-configurator"]=window["webpackJsonpPluginbundle-configurator"]||[]).forEach(i.bind(null,0)),s.push=i.bind(null,s.push.bind(s)),window?.__sw__?.assetPath&&(a.p=window.__sw__.assetPath+"/bundles/bundleconfigurator/"),function(){"use strict";a(578),a(276),a(33),a(150),Shopware.Component.override("sw-product-detail",{template:'{% block sw_product_detail_content_tabs_additional %}\n    {% parent %}\n    <sw-tabs-item  v-if="showBundleTab" :route="{ name: \'sw.product.detail.bundle\', params: { id: $route.params.id } }" title="Bundle">\n        Bundle\n    </sw-tabs-item>\n{% endblock %}',data(){return{showBundleTab:!0}}}),a(94);let{Data:e,Context:t,Component:n,Mixin:o}=Shopware,{mapState:d,mapGetters:r}=n.getComponentHelper(),{Criteria:i}=e;n.register("bundle-configurator-detail",{template:'{% block sw_product_detail_bundle %}\n    <div class="custom-bundle-button">\n        <sw-button\n                :router-link="{ name: \'sw.product.detail.bundle.create\' }"\n                :disabled="!acl.can(\'product.editor\')"\n                variant="ghost"\n        >\n            {{ $tc(\'product_bundle.list.addBundle\') }}\n        </sw-button>\n    </div>\n\n    <template>\n        <div v-if="bundles && bundles.length > 0">\n            <sw-card\n                    v-for="bundle in bundles"\n                    :key="bundle.id"\n                    :title="bundle && bundle.name ? bundle.name : \'Bundle\'"\n                    position-identifier="sw-product-detail-bundle"\n            >\n                <template #header-right>\n                    <sw-button\n                            v-if="!bundle"\n                            :router-link="{ name: \'sw.product.detail.bundle.create\' }"\n                            :disabled="!acl.can(\'product.editor\')"\n                    >\n                        {{ $tc(\'product_bundle.list.addBundle\') }}\n                    </sw-button>\n                    <sw-button\n                            v-if="bundle"\n                            @click="onStartBundleDelete(bundle)"\n                    >\n                        {{ $tc(\'product_bundle.list.deleteBundle\') }}\n                    </sw-button>\n                    <sw-button\n                            v-if="bundle"\n                            variant="primary"\n                            :disabled="!acl.can(\'product.editor\')"\n                            @click="saveBundleChanges(bundle)"\n                    >\n                        {{ $tc(\'product_bundle.create.save\') }}\n                    </sw-button>\n\n                </template>\n\n                {% block sw_product_detail_bundle_data %}\n                    <template>\n                        <div class="sw-product-detail-bundle">\n                            <template v-if="!isLoading">\n                                <div v-if="bundle">\n                                    <div class="sw-product-detail-bundle__info">\n                                        <div>\n                                            <strong>{{ $tc(\'product_bundle.list.bundleProducts\') }}</strong>\n                                            <sw-data-grid\n                                                    :dataSource="bundle.bundleAssignedProducts"\n                                                    :columns="assignedProductColumns"\n                                                    :showSettings="true"\n                                                    :showSelection="false"\n                                            >\n                                                <template #actions="{ item }">\n                                                    <sw-context-menu-item\n                                                            variant="danger"\n                                                            @click="deleteProductFromBundle(item.productId, bundle.id)"\n                                                    >\n                                                        {{ $tc(\'product_bundle.list.delete\') }}\n                                                    </sw-context-menu-item>\n                                                </template>\n                                                <template #column-productNumber="{ item }">\n                                                    {{ item.product.productNumber }}\n                                                </template>\n                                                <template #column-productName="{ item }">\n                                                    {{ item.product.translated.name }}\n\n                                                    <span v-if="item.product.parentId">\n                                                        {{ parentProductNames[item.product.parentId] ?  parentProductNames[item.product.parentId] : \'\' }}\n                                                    </span>\n\n                                                <span class="product-options">\n\n                                                    {{ item.product.options[0]?.group.name ? \': \' + item.product.options[0].group.name + \': \' : \'\' }}\n                                                    {{ item.product.options[0]?.name ? item.product.options[0].name : \'\' }}\n\n                                                    {{ item.product.options[1]?.group.name ? \',\' + item.product.options[1].group.name + \': \' : \'\' }}\n                                                    {{ item.product.options[1]?.name ? item.product.options[1].name : \'\' }}\n\n                                                </span>\n\n                                                </template>\n\n                                                <template #column-quantity="{ item }">\n                                                    <template v-if="editingProductId === item.productId">\n                                                        <sw-number-field\n                                                                size="small"\n                                                                numberType="int"\n                                                                :min="1"\n                                                                v-model:value="item.newQuantity">\n                                                        </sw-number-field>\n                                                        <sw-button\n                                                                class="sw-button sw-data-grid__inline-edit-cancel sw-button--x-small sw-button--square custom-cancel-btn-margin"\n                                                                @click="cancelSaveQuantity(item)">\n                                                            <sw-icon name="regular-times-xs"/>\n                                                        </sw-button>\n                                                        <sw-button\n                                                                class="sw-button sw-data-grid__inline-edit-save sw-button--primary sw-button--x-small sw-button--square"\n                                                                @click="saveQuantity(item)">\n                                                            <sw-icon name="regular-checkmark-xs"/>\n                                                        </sw-button>\n                                                    </template>\n                                                    <template v-else>\n                                                        <span @click="editQuantity(item)">\n                                                            {{ item.quantity }}\n                                                        </span>\n                                                    </template>\n                                                </template>\n                                            </sw-data-grid>\n                                        </div>\n\n                                        <div class="sw-product-detail-bundle__name-section">\n                                            <sw-text-field\n                                                    v-if="bundle"\n                                                    v-model:value="bundle.name"\n                                                    :label="$tc(\'product_bundle.list.bundleName\')"\n                                                    :disabled="!acl.can(\'product.editor\')"\n                                                    class="bundle-input"\n                                            ></sw-text-field>\n                                        </div>\n\n                                        <div class="sw-product-detail-bundle__discount-section">\n                                            <sw-number-field\n                                                    v-if="bundle"\n                                                    v-model:value="bundle.discount"\n                                                    :label="$tc(\'product_bundle.list.discount\')"\n                                                    :disabled="!acl.can(\'product.editor\')"\n                                                    class="bundle-input"\n                                            ></sw-number-field>\n\n                                            <sw-single-select\n                                                    v-if="bundle"\n                                                    v-model:value="bundle.discountType"\n                                                    :label="$tc(\'product_bundle.list.discountType\')"\n                                                    :options="[\n                                                    { value: \'percentage\', label: \'Percentage\' },\n                                                    { value: \'fixed\', label: \'Fixed Amount\' }\n                                                ]"\n                                                    :disabled="!acl.can(\'product.editor\')"\n                                                    class="bundle-input"\n                                            ></sw-single-select>\n                                        </div>\n                                    </div>\n                                </div>\n                            </template>\n                            <template v-else>\n                                <sw-loader></sw-loader>\n                            </template>\n\n                            <sw-button\n                                    @click="startAddingToBundle(bundle)"\n                                    class="sw-button__add-product"\n                                    size="small"\n                                    variant="ghost">\n                                {{ $tc(\'product_bundle.list.addProductBundle\') }}\n                            </sw-button>\n\n                            <div v-if="showingBundleFormForId === bundle.id">\n                                <form @submit.prevent="addProductToBundle">\n                                    \n                                    <sw-entity-single-select\n                                            v-model:value="selectedProductId"\n                                            entity="product"\n                                            :criteria="productCriteria"\n                                            label="Select Product"\n                                            placeholder="Select Product"\n                                            :displayVariants = "true"\n                                            required\n                                    />\n\n                                    <sw-number-field\n                                            v-model:value="selectedQuantity"\n                                            label="Quantity"\n                                            type="number"\n                                            :placeholder="Quantity"\n                                            min="1"\n                                            required\n                                    />\n\n                                    <div class="form-actions">\n                                        <sw-button @click="cancelAddingToBundle" variant="ghost">\n                                            {{ $tc(\'product_bundle.list.cancel\') }}\n                                        </sw-button>\n                                    </div>\n                                </form>\n                            </div>\n\n                            <sw-modal\n                                    v-if="showBundleDeleteModal"\n                                    title="Confirm Deletion"\n                                    @modal-close="onCloseBundleDeleteModal"\n                            >\n                                <p>{{ $tc(\'product_bundle.list.confirmDeletionMessage\') }}</p>\n                                <template #modal-footer>\n                                    <sw-button @click="onCancelBundleDelete">\n                                        {{ $tc(\'product_bundle.list.cancel\') }}\n                                    </sw-button>\n                                    <sw-button\n                                            variant="danger"\n                                            @click="onConfirmBundleDelete"\n                                    >\n                                        {{ $tc(\'product_bundle.list.deleteConfirm\') }}\n                                    </sw-button>\n                                </template>\n                            </sw-modal>\n                        </div>\n                    </template>\n                {% endblock %}\n            </sw-card>\n        </div>\n        <div v-else>\n            <sw-card>\n                <sw-empty-state\n                        :absolute="false"\n                        :title="$tc(\'product_bundle.list.noBundleAvailableTitle\')"\n                        :subline="$tc(\'product_bundle.list.noBundleAvailableMessage\')"\n                ></sw-empty-state>\n            </sw-card>\n        </div>\n    </template>\n{% endblock %}',inject:["repositoryFactory","acl"],mixins:[o.getByName("notification")],data(){return{bundles:[],showBundleTab:!0,showBundleDeleteModal:!1,deleteBundle:null,editingProductId:null,editingDiscount:!1,newDiscount:null,editingDiscountType:!1,newDiscountType:null,editingBundleName:!1,newBundleName:null,products:[],selectedProductId:null,selectedQuantity:1,addingToBundle:null,showingBundleFormForId:null,parentProductNames:{},assignedProductColumns:[{property:"productNumber",label:this.$tc("product_bundle.list.productNumber"),rawData:!0},{property:"productName",label:this.$tc("product_bundle.list.productName"),rawData:!0},{property:"quantity",label:this.$tc("product_bundle.list.quantity"),rawData:!0,width:"150px"}]}},async created(){this.getBundle(),await this.fetchProducts()},watch:{product:{immediate:!0,handler(e){e&&e.id&&this.getBundle()}},bundles:{handler(e){e&&e.length&&e.forEach(e=>{this.fetchParentNamesForBundle(e.bundleAssignedProducts)})},immediate:!0,deep:!0}},computed:{...d("swProductDetail",["product"]),...r("swProductDetail",["isLoading"]),bundleRepository(){return this.repositoryFactory.create("product_bundle")},bundleCriteria(){let e=new i;return e.addFilter(i.equals("productId",this.product.id)),e.addAssociation("bundleAssignedProducts.product"),e.addAssociation("bundleAssignedProducts.product.options.group"),e},productCriteria(){let e=new i;return e.addFilter(i.not("and",[i.equals("id",this.$route.params.id)])),e.addAssociation("options.group"),e.addAssociation("properties.group"),e},bundleAssignedProductsRepository(){return this.repositoryFactory.create("product_bundle_assigned_products")},productRepository(){return this.repositoryFactory.create("product")}},methods:{async getBundle(){if(this.product&&this.product.id)try{let e=new i;e.addFilter(i.equals("productId",this.product.id)),e.addAssociation("bundleAssignedProducts.product"),e.addAssociation("bundleAssignedProducts.product.options.group"),this.bundles=await this.bundleRepository.search(e,t.api)}catch(e){this.createNotificationError({title:"Error",message:"Failed to fetch bundles."})}},async fetchProducts(){try{let e=this.repositoryFactory.create("product"),n=new i;n.addSorting(i.sort("name","ASC")),n.addAssociation("options.group"),this.products=await e.search(n,t.api)}catch(e){this.createNotificationError({title:"Error",message:"Failed to fetch products for the dropdown."})}},startAddingToBundle(e){this.showingBundleFormForId=e.id,this.selectedProductId=null,this.selectedQuantity=1},async fetchParentNamesForBundle(e){for(let t of e)t.product.parentId&&!this.parentProductNames[t.product.parentId]&&await this.loadParentProductName(t.product.parentId)},async loadParentProductName(e){if(!this.parentProductNames[e])try{let t=this.repositoryFactory.create("product"),n=await t.get(e,Shopware.Context.api);this.$set(this.parentProductNames,e,n.translated.name)}catch(t){console.error("Error fetching parent product name:",t),this.$set(this.parentProductNames,e,"No Parent")}},cancelAddingToBundle(){this.showingBundleFormForId=null},editQuantity(e){console.log("Editing quantity for item:",e),this.editingProductId=e.productId,this.$set(e,"newQuantity",e.quantity)},cancelSaveQuantity(e){console.log("Cancelling quantity edit for item:",e),this.editingProductId=null},async saveQuantity(e){console.log("Saving new quantity for item:",e);try{let n=await this.productRepository.get(e.productId,t.api);if(e.newQuantity>n.stock){this.createNotificationError({title:"Error",message:`The entered quantity (${e.newQuantity}) exceeds the available stock (${n.stock}).`});return}let o=new i;o.addFilter(i.equals("productId",e.productId)),o.addFilter(i.equals("bundleId",e.bundleId)),console.log("Search criteria:",o);let d=await this.bundleAssignedProductsRepository.search(o,t.api);if(console.log("Search result:",d),d.total>0){let n=d.first();console.log("Assigned product found:",n),n.quantity=e.newQuantity,console.log("Updated product quantity:",n),await this.bundleAssignedProductsRepository.save(n,t.api),console.log("Product saved successfully"),this.editingProductId=null,this.createNotificationSuccess({title:"Success",message:"Quantity updated successfully."}),console.log("Refreshing bundle data..."),this.getBundle()}else throw console.error("Product not found in bundle."),Error("Product not found in bundle.")}catch(e){console.error("Error occurred during saveQuantity:",e),this.createNotificationError({title:"Error",message:"Failed to update quantity. Please check the logs for more details."})}},async addProductToBundle(){if(!this.showingBundleFormForId||!this.selectedProductId||this.selectedQuantity<1){this.createNotificationError({title:"Error",message:"Please select a product and quantity."});return}if(this.selectedProductId===this.product.id){this.createNotificationError({title:"Error",message:"You cannot add the main product to the bundle."});return}try{let e=new i;if(e.addFilter(i.equals("productId",this.selectedProductId)),e.addFilter(i.equals("bundleId",this.showingBundleFormForId)),(await this.bundleAssignedProductsRepository.search(e,t.api)).total>0){this.createNotificationError({title:"Error",message:"This product is already part of the bundle."});return}let n=await this.productRepository.get(this.selectedProductId,t.api);if(this.selectedQuantity>n.stock){this.createNotificationError({title:"Error",message:`The selected quantity (${this.selectedQuantity}) exceeds the available stock (${n.stock}).`});return}let o=this.bundleAssignedProductsRepository.create(t.api);o.productId=this.selectedProductId,o.bundleId=this.showingBundleFormForId,o.quantity=this.selectedQuantity,await this.bundleAssignedProductsRepository.save(o,t.api),this.createNotificationSuccess({title:"Success",message:"Product added to the bundle successfully."}),this.showingBundleFormForId=null,this.getBundle()}catch(e){this.createNotificationError({title:"Error",message:"Failed to add product to bundle."})}},async saveBundleChanges(e){if(!e){this.createNotificationError({title:"Error",message:"No bundle selected for update."});return}try{let n={};null!==this.newDiscount&&e.discount!==this.newDiscount&&(n.discount=this.newDiscount),null!==this.newDiscountType&&e.discountType!==this.newDiscountType&&(n.discountType=this.newDiscountType),null!==this.newBundleName&&e.name!==this.newBundleName&&(n.name=this.newBundleName),Object.assign(e,n);let o=await this.bundleRepository.save(e,t.api),d=await this.addProductToBundle();o&&d&&this.createNotificationSuccess({title:"Success",message:"Bundle updated successfully."}),this.editingDiscount=!1,this.editingDiscountType=!1,this.editingBundleName=!1,this.newDiscount=null,this.newDiscountType=null,this.newBundleName=null,this.getBundle()}catch(e){this.createNotificationError({title:"Error",message:"Failed to update bundle."})}},delete(e){try{this.bundleRepository.delete(e.id,t.api).then(()=>{this.createNotificationSuccess({title:"Success",message:"Bundle deleted successfully."}),this.getBundle()})}catch(e){this.createNotificationError({title:"Error",message:"Failed to delete bundle."})}},onStartBundleDelete(e){if(!this.acl.can("product.editor")){this.createNotificationError({title:"Permission denied!",message:"You cannot delete a bundle that was not created by you."});return}this.deleteBundle=e,this.onShowBundleDeleteModal()},onCancelBundleDelete(){this.deleteBundle=null,this.onCloseBundleDeleteModal()},onShowBundleDeleteModal(){this.showBundleDeleteModal=!0},onCloseBundleDeleteModal(){this.showBundleDeleteModal=!1},onConfirmBundleDelete(){this.onCloseBundleDeleteModal(),this.delete(this.deleteBundle)},async deleteProductFromBundle(e,n){try{let o=new i;o.addFilter(i.equals("productId",e)),o.addFilter(i.equals("bundleId",n));let d=await this.bundleAssignedProductsRepository.search(o,t.api);if(d.total>0){await this.bundleAssignedProductsRepository.delete(d.first().id,t.api);let e=new i;e.addFilter(i.equals("bundleId",n));let o=await this.bundleAssignedProductsRepository.search(e,t.api);0===o.total?(await this.bundleRepository.delete(n,t.api),this.createNotificationSuccess({title:"Success",message:"Product deleted and bundle removed as it has no remaining products."})):this.createNotificationSuccess({title:"Success",message:"Product deleted from bundle successfully."}),this.getBundle()}else throw Error("Product not found in bundle.")}catch(e){this.createNotificationError({title:"Error",message:"Failed to delete product from bundle."})}}}}),a(927);let{Context:s,Component:l,Mixin:u}=Shopware,{Criteria:c}=Shopware.Data;l.register("bundle-configurator-create",{template:'{% block bundle_configurator_create %}\n    <div id="bundle-configurator-container">\n        <div class="custom-save-all-bundles-button">\n            <sw-button\n                    @click="storeAllBundles"\n                    variant="primary"\n                    class="custom-save-all-bundles-button">\n                {{ $tc(\'product_bundle.create.createBundleTitle\') }}\n            </sw-button>\n        </div>\n        <sw-card\n                v-for="(bundle, index) in bundles"\n                :key="index"\n                title="Create Bundle"\n                position-identifier="sw-product-detail-bundle-create">\n            <template v-slot:header-right>\n                <sw-button\n                        variant="ghost-danger"\n                        @click="deleteBundle(index)"\n                        class="delete-bundle-button">\n                    {{ $tc(\'product_bundle.list.delete\') }}\n                </sw-button>\n            </template>\n            <sw-text-field\n                    v-model:value="bundle.bundleName"\n                    :label="$tc(\'product_bundle.list.bundleName\')"\n                    :placeholder="$tc(\'product_bundle.list.bundleName\')"\n                    required\n                    class="bundle-input"\n            />\n            <sw-single-select\n                    v-model:value="bundle.discountType"\n                    :label="$tc(\'product_bundle.list.discountType\')"\n                    :options="discountTypeOptions"\n                    :placeholder="$tc(\'product_bundle.list.discountTypeSelect\')"\n                    required\n                    class="bundle-input"\n            >\n            </sw-single-select>\n            <div class="discount-input-container">\n                <sw-number-field\n                        v-model:value="bundle.discount"\n                        :label="$tc(\'product_bundle.list.discount\')"\n                        :placeholder="$tc(\'product_bundle.list.discountSelect\')"\n                        :min="1"\n                        :max="100"\n                        class="discount-input-field"\n                />\n                <span class="input-symbol">\n                    {{ bundle.discountType === \'fixed\' ? \'$\' : (bundle.discountType === \'percentage\' ? \'%\' : \'\') }}\n                </span>\n            </div>\n\n            <sw-button\n                    @click="addBundleProduct(index)"\n                    class="add-product-bundle-button"\n                    size="small"\n                    variant="ghost">\n                {{ $tc(\'product_bundle.list.addProductBundle\') }}\n            </sw-button>\n            <div\n                    v-for="(bundleProduct, productIndex) in bundle.bundleProducts"\n                    :key="`product-${index}-${productIndex}`"\n                    class="bundle-product-entry">\n                <sw-entity-single-select\n                        v-model:value="bundleProduct.productId"\n                        entity="product"\n                        :criteria="productFilter(index)"\n                        :label="$tc(\'product_bundle.create.selectProduct\')"\n                        :placeholder="$tc(\'product_bundle.create.selectProduct\')"\n                        :displayVariants="true"\n                        @change="onProductChange(index, productIndex, bundleProduct)"\n                />\n                <sw-text-field\n                        v-model:value="bundleProduct.quantity"\n                        :label="$tc(\'product_bundle.list.quantity\')"\n                        :placeholder="$tc(\'product_bundle.create.enterQuantity\')"\n                        type="number"\n                        @input="onQuantityChange(index, productIndex, $event.target.value)"\n                />\n            </div>\n        </sw-card>\n        <div class="custom-bundle-button">\n            <sw-button\n                    @click="addNewBundle"\n                    variant="ghost"\n                    class="custom-add-bundle-button">\n                {{ $tc(\'product_bundle.create.addNewBundle\') }}\n            </sw-button>\n        </div>\n    </div>\n{% endblock %}\n',inject:["repositoryFactory"],mixins:[u.getByName("notification")],data(){return{bundles:[{bundleName:"",discount:null,discountType:null,bundleProducts:[]}],discountTypeOptions:[{value:"fixed",label:"Fixed Discount"},{value:"percentage",label:"Percentage Discount"}]}},computed:{productRepository(){return this.repositoryFactory.create("product")},productBundleRepository(){return this.repositoryFactory.create("product_bundle")},productBundleAssignedProductsRepository(){return this.repositoryFactory.create("product_bundle_assigned_products")},getDiscountSymbol(){return e=>"fixed"===e?"$":"percentage"===e?"%":""}},methods:{productFilter(e){let t=new c;t.addAssociation("options.group");let n=this.$route.params.id,o=this.bundles.flatMap(e=>e.bundleProducts).filter(e=>e.productId).map(e=>e.productId);return o.push(n),o.length>0&&t.addFilter(c.not("AND",o.map(e=>c.equals("id",e)))),t},getVariantLabel(e){if(!e.productId)return"";let t=this.$store.state.product.products.find(t=>t.id===e.productId),n=t?t.name:"";return t&&t.options&&(n+=" - "+t.options.map(e=>e.values.map(t=>`${e.name}: ${t.translated.name}`).join(", ")).join(", ")),n},async checkProductStock(e,t){try{if((await this.productRepository.get(e,s.api)).stock<t)return!1;return!0}catch(e){return console.error("Error checking product stock:",e),!1}},addNewBundle(){this.bundles.push({bundleName:"",discount:null,discountType:null,bundleProducts:[]})},validateBundles(){let e=!0;return this.bundles.forEach(t=>{t.bundleName.trim()&&t.discountType&&0!==t.bundleProducts.length||(e=!1,this.createNotificationError({title:"Validation Error",message:"Please fill out all required fields."})),t.bundleProducts.forEach(t=>{t.productId&&t.quantity||(e=!1,this.createNotificationError({title:"Validation Error",message:"The assigned products section is missing fields."}))})}),e},async storeAllBundles(){if(this.validateBundles()){try{for(let e of this.bundles){let t=this.productBundleRepository.create(s.api);t.productId=this.$route.params.id,t.name=e.bundleName,t.discount=e.discount??null,t.discountType=e.discountType??null;let n=[];for(let o of e.bundleProducts){if(!await this.checkProductStock(o.productId,o.quantity)){this.createNotificationError({title:"Stock Error",message:`The product with ID: "${o.id}" does not have sufficient stock for the quantity of ${o.quantity}.`});return}let e=this.productBundleAssignedProductsRepository.create(s.api);e.bundleId=t.id,e.productId=o.productId,e.quantity=parseInt(o.quantity,10),n.push(e)}await this.productBundleRepository.save(t,s.api),await Promise.all(n.map(e=>this.productBundleAssignedProductsRepository.save(e,s.api)))}this.createNotificationSuccess({title:"Success",message:"All bundles saved successfully."}),this.bundles=[{bundleName:"",discount:null,discountType:null,bundleProducts:[]}]}catch(e){this.createNotificationError({title:"Error",message:"Failed to save bundles."}),console.error("Error saving bundles:",e)}this.$router.push({name:"sw.product.detail.bundle",params:{id:this.$route.params.id}})}},deleteBundle(e){this.bundles.splice(e,1)},async addBundleProduct(e){let t=this.bundles[e];if(t.bundleProducts.some(e=>null===e.productId)){this.createNotificationError({title:"Error",message:"Please select a product for the current row before adding a new one."});return}if(t.bundleProducts.some(e=>e.productId===this.$route.params.id)){this.createNotificationError({title:"Validation Error",message:"You cannot include the main product in the bundle."});return}let n=t.bundleProducts.map(e=>e.productId).filter(e=>null!==e);if(new Set(n).size!==n.length){this.createNotificationError({title:"Validation Error",message:"A product has been added multiple times to the bundle. Please remove duplicates."});return}let o={productId:null,quantity:1};t.bundleProducts.push(o),this.$watch(()=>o.productId,async e=>{e&&!await this.checkProductStock(e,o.quantity)&&(this.createNotificationError({title:"Stock Error",message:`The selected product does not have sufficient stock for the quantity of ${o.quantity}.`}),t.bundleProducts.pop())})}},watch:{bundles:{deep:!0,handler(){this.$forceUpdate()}}}}),Shopware.Module.register("bundle-configurator",{routeMiddleware(e,t){let n="sw.product.detail.bundle.create";"sw.product.detail"===t.name&&t.children.every(e=>"sw.product.detail.bundle"!==e.name)&&t.children.push({name:"sw.product.detail.bundle",path:"/sw/product/detail/:id/bundle",component:"bundle-configurator-detail",meta:{parentPath:"sw.product.index",privilege:"product.viewer"}}),"sw.product.detail"===t.name&&t.children.every(e=>e.name!==n)&&t.children.push({name:n,path:"/sw/product/detail/:id/bundle/create",component:"bundle-configurator-create",meta:{parentPath:"sw.product.index",privilege:"product.editor"}}),e(t)}})}()})();